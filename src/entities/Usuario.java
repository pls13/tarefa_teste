package entities;
// Generated 01/08/2015 18:08:32 by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.SequenceGenerator;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Usuario generated by hbm2java
 */
@Entity
@Table(name="usuario"
    ,schema="public"
)
public class Usuario  implements java.io.Serializable {


     private int id;
     private String nome;
     private Set<Tarefa> tarefasForIdUsuarioCriador = new HashSet<Tarefa>(0);
     private Set<Tarefa> tarefasForIdUsuarioExecutor = new HashSet<Tarefa>(0);

    public Usuario() {
    }

	
    public Usuario(int id, String nome) {
        this.id = id;
        this.nome = nome;
    }
    public Usuario(int id, String nome, Set<Tarefa> tarefasForIdUsuarioCriador, Set<Tarefa> tarefasForIdUsuarioExecutor) {
       this.id = id;
       this.nome = nome;
       this.tarefasForIdUsuarioCriador = tarefasForIdUsuarioCriador;
       this.tarefasForIdUsuarioExecutor = tarefasForIdUsuarioExecutor;
    }
   

    @Id 
    @SequenceGenerator(allocationSize=1, initialValue=1, sequenceName="usuario_id_seq", name="usuario_id_seq")
    @GeneratedValue(generator="usuario_id_seq", strategy=GenerationType.SEQUENCE)
    @Column(name="id")    
    
    public int getId() {
        return this.id;
    }
    
    public void setId(int id) {
        this.id = id;
    }

    
    @Column(name="nome", nullable=false, length=50,unique = true)
    public String getNome() {
        return this.nome;
    }
    
    public void setNome(String nome) {
        this.nome = nome;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="usuarioByIdUsuarioCriador")
    public Set<Tarefa> getTarefasForIdUsuarioCriador() {
        return this.tarefasForIdUsuarioCriador;
    }
    
    public void setTarefasForIdUsuarioCriador(Set<Tarefa> tarefasForIdUsuarioCriador) {
        this.tarefasForIdUsuarioCriador = tarefasForIdUsuarioCriador;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="usuarioByIdUsuarioExecutor")
    public Set<Tarefa> getTarefasForIdUsuarioExecutor() {
        return this.tarefasForIdUsuarioExecutor;
    }
    
    public void setTarefasForIdUsuarioExecutor(Set<Tarefa> tarefasForIdUsuarioExecutor) {
        this.tarefasForIdUsuarioExecutor = tarefasForIdUsuarioExecutor;
    }




}


